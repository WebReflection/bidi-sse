/*! (c) Andrea Giammarchi - ISC */
const e=new WeakMap;class t{constructor(){e.set(this,new Map)}on(t,s){const r=e.get(this);return r.has(t)||r.set(t,new Set),r.get(t).add(s),this}emit(t,...s){const r=e.get(this);if(r.has(t))for(const e of r.get(t))e.apply(this,s)}}const s=new WeakMap,r=e=>e.text();class n extends((e=>class extends e{static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}})
/*! (c) Andrea Giammarchi - ISC */(t)){get readyState(){return s.get(this).readyState}constructor(e,t={}){super();const r=t.fetch||{},n=new EventSource(e,{withCredentials:"omit"!==r.credentials}),{parse:a,stringify:i}=t.JSON||JSON,o={es:n,parse:a,stringify:i,options:r,href:"",readyState:0};n.addEventListener("id",(({data:e})=>{const t=a(e),s=new URL(n.url);s.searchParams.append("id",t),o.href=s.href,o.readyState=1,this.emit("open")}),{once:!0}),n.addEventListener("unexpected",(({data:e})=>{this.emit("error",new Error("Unexpected ➡ "+a(e)))})),n.addEventListener("message",(({data:e})=>{this.emit("message",a(e))})),n.addEventListener("error",(()=>{o.readyState=2,this.emit("error",new Error("Connection lost ➡ "+e)),this.close()}),{once:!0}),n.addEventListener("close",(()=>{o.readyState=3,n.close(),this.emit("close")}),{once:!0}),s.set(this,o)}send(e){const{href:t,options:n,readyState:a,stringify:i}=s.get(this);if(1!==a)throw new Error("invalid state");const o=i(e);fetch(t,{...n,method:"post",body:o}).then(r)}close(){s.get(this).es.dispatchEvent(new Event("close"))}}export{n as default};
