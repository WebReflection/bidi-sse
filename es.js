/*! (c) Andrea Giammarchi - ISC */
const t=new WeakMap;class e{constructor(){t.set(this,new Map)}on(e,s){const n=t.get(this);return n.has(e)||n.set(e,new Set),n.get(e).add(s),this}emit(e,...s){const n=t.get(this);if(n.has(e))for(const t of n.get(e))t.apply(this,s)}}const s=new WeakMap,n=t=>t.text();class r extends((t=>class extends t{static get CONNECTING(){return 0}static get OPEN(){return 1}static get CLOSING(){return 2}static get CLOSED(){return 3}})
/*! (c) Andrea Giammarchi - ISC */(e)){constructor(t,e={}){super();const n={once:!0},r=e.fetch||{},i="omit"!==r.credentials,a=new EventSource(t,{withCredentials:i}),{parse:o,stringify:c}=e.JSON||JSON,d={es:a,stringify:c,href:"",options:r,state:0};a.addEventListener("bidi-sse",(({data:t})=>{const e=o(t),s=new URL(a.url);s.searchParams.append("bidi-sse",e),d.href=s.href,d.state=1,this.emit("open")}),n),a.addEventListener("unexpected",(({data:t})=>{this.emit("error",new Error("Unexpected ➡ "+o(t)))})),a.addEventListener("message",(({data:t})=>{this.emit("message",o(t))})),a.addEventListener("error",(()=>{d.state=2,this.emit("error",new Error("Connection lost ➡ "+t)),this.close()}),n),a.addEventListener("close",(()=>{d.state=3,a.close(),this.emit("close")}),n),s.set(this,d)}get readyState(){return s.get(this).state}send(t){const{stringify:e,href:r,options:i,state:a}=s.get(this);if(1!==a)throw new Error("invalid state");const o=e(t);fetch(r,{...i,method:"post",body:o}).then(n)}close(){s.get(this).es.dispatchEvent(new Event("close"))}}export{r as default};
